package vr;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;

/**
 * This file was autogenerated by
 * <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a
 * few opensource projects.</a>.<br>
 * For help, please visit
 * <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> ,
 * <a href="http://rococoa.dev.java.net/">Rococoa</a>, or
 * <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class COpenVRContext extends Structure {

    /**
     * class vr::IVRSystem *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRSystem;
    /**
     * class vr::IVRChaperone *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRChaperone;
    /**
     * class vr::IVRChaperoneSetup *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRChaperoneSetup;
    /**
     * class vr::IVRCompositor *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRCompositor;
    /**
     * class vr::IVROverlay *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVROverlay;
    /**
     * class vr::IVRResources *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRResources;
    /**
     * class vr::IVRRenderModels *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRRenderModels;
    /**
     * class vr::IVRExtendedDisplay *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRExtendedDisplay;
    /**
     * class vr::IVRSettings *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRSettings;
    /**
     * class vr::IVRApplications *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRApplications;

    /**
     * class vr::IVRTrackedCamera *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRTrackedCamera;
    /**
     * class vr::IVRScreenshots *<br>
     * C type : intptr_t
     */
    public IntByReference m_pVRScreenshots;

    public COpenVRContext() {
        super();
    }

    protected List<?> getFieldOrder() {
        return Arrays.asList("m_pVRSystem", "m_pVRChaperone", "m_pVRChaperoneSetup",
                "m_pVRCompositor", "m_pVROverlay", "m_pVRResources", "m_pVRRenderModels",
                "m_pVRExtendedDisplay", "m_pVRSettings", "m_pVRApplications", "m_pVRTrackedCamera",
                "m_pVRScreenshots");
    }

    /**
     * @param m_pVRSystem class vr::IVRSystem *<br>
     * C type : intptr_t<br>
     * @param m_pVRChaperone class vr::IVRChaperone *<br>
     * C type : intptr_t<br>
     * @param m_pVRChaperoneSetup class vr::IVRChaperoneSetup *<br>
     * C type : intptr_t<br>
     * @param m_pVRCompositor class vr::IVRCompositor *<br>
     * C type : intptr_t<br>
     * @param m_pVROverlay class vr::IVROverlay *<br>
     * C type : intptr_t<br>
     * @param m_pVRResources class vr::IVRResources *<br>
     * C type : intptr_t<br>
     * @param m_pVRRenderModels class vr::IVRRenderModels *<br>
     * C type : intptr_t<br>
     * @param m_pVRExtendedDisplay class vr::IVRExtendedDisplay *<br>
     * C type : intptr_t<br>
     * @param m_pVRSettings class vr::IVRSettings *<br>
     * C type : intptr_t<br>
     * @param m_pVRApplications class vr::IVRApplications *<br>
     * C type : intptr_t
     * @param m_pVRTrackedCamera class vr::IVRTrackedCamera *<br>
     * C type : intptr_t
     * @param m_pVRScreenshots class vr::IVRScreenshots *<br>
     * C type : intptr_t
     */
    public COpenVRContext(IntByReference m_pVRSystem, IntByReference m_pVRChaperone,
            IntByReference m_pVRChaperoneSetup, IntByReference m_pVRCompositor,
            IntByReference m_pVROverlay, IntByReference m_pVRResources, IntByReference m_pVRRenderModels,
            IntByReference m_pVRExtendedDisplay, IntByReference m_pVRSettings,
            IntByReference m_pVRApplications, IntByReference m_pVRTrackedCamera, IntByReference m_pVRScreenshots) {
        super();
        this.m_pVRSystem = m_pVRSystem;
        this.m_pVRChaperone = m_pVRChaperone;
        this.m_pVRChaperoneSetup = m_pVRChaperoneSetup;
        this.m_pVRCompositor = m_pVRCompositor;
        this.m_pVROverlay = m_pVROverlay;
        this.m_pVRResources = m_pVRResources;
        this.m_pVRRenderModels = m_pVRRenderModels;
        this.m_pVRExtendedDisplay = m_pVRExtendedDisplay;
        this.m_pVRSettings = m_pVRSettings;
        this.m_pVRApplications = m_pVRApplications;
        this.m_pVRTrackedCamera = m_pVRTrackedCamera;
        this.m_pVRScreenshots = m_pVRScreenshots;
    }

    public COpenVRContext(Pointer peer) {
        super(peer);
        read();
    }

    public static class ByReference extends COpenVRContext implements Structure.ByReference {

    };

    public static class ByValue extends COpenVRContext implements Structure.ByValue {

    };
}
